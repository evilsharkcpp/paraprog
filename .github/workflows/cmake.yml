# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install MPI
      run: |
        sudo apt install mpich python3 pip
        pip install scipy
        pip install np
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: TestMPI_Sum
      working-directory: ${{github.workspace}}/build
      run: |
        python3 ../tests/Test.py 200
        mpiexec -n 3 ./Main/Main left.txt right.txt add result_sum.txt
        python3 ../tests/Validate.py sum.txt result_sum.txt
    
    - name: TestMPI_Mult
      working-directory: ${{github.workspace}}/build
      run: |
        python3 ../tests/Test.py 50
        mpiexec -n 3 ./Main/Main left.txt right.txt mult result_mult.txt
        python3 ../tests/Validate.py mult.txt result_mult.txt

    - name: TestOneThread_Sum
      working-directory: ${{github.workspace}}/build
      run: |
        python3 ../tests/Test.py 200
        ./Main/Main left.txt right.txt add result_sum.txt
        python3 ../tests/Validate.py sum.txt result_sum.txt
        
    - name: TestOneThread_Mult
      working-directory: ${{github.workspace}}/build
      run: |
        python3 ../tests/Test.py 50
        ./Main/Main left.txt right.txt mult result_mult.txt
        python3 ../tests/Validate.py mult.txt result_mult.txt
        
    - name: TestMPI_Sum_Speed
      working-directory: ${{github.workspace}}/build
      run: |
        python3 ../tests/Test.py 999
        mpiexec -n 3 ./Main/Main left.txt right.txt add result_sum.txt 0

    - name: TestMPI_Mult_Speed
      working-directory: ${{github.workspace}}/build
      run: |
        python3 ../tests/Test.py 999
        mpiexec -n 3 ./Main/Main left.txt right.txt mult result_mult.txt 0

    - name: TestOneThread_Sum_Speed
      working-directory: ${{github.workspace}}/build
      run: |
        python3 ../tests/Test.py 999
        ./Main/Main left.txt right.txt add result_sum.txt 0
        
    - name: TestOneThread_Mult_Speed
      working-directory: ${{github.workspace}}/build
      run: |
        python3 ../tests/Test.py 999
        ./Main/Main left.txt right.txt mult result_mult.txt 0

